<project name="PetitParser" default="all" basedir=".">

  <!-- external properties -->
  <property file="build.properties" />

  <!-- build properties -->
  <property name="app.name" value="PetitParser" />
  <property name="app.version" value="1.0" />
  <description>Dynamic Grammars for Java</description>

  <!-- input directories -->
  <property name="src" location="src" />
  <property name="lib" location="lib" />
  <property name="test" location="test" />

  <!-- output directories -->
  <property name="build" location="build" />
  <property name="build.bin" location="${build}/bin" />
  <property name="build.lib" location="${build}/lib" />
  <property name="build.doc" location="${build}/doc" />
  <property name="build.test" location="${build}/test" />
  <property name="build.checkstyle" location="${build}/checkstyle" />

  <!-- classpath definition -->
  <path id="classpath">
    <pathelement location="${build.bin}" />
    <pathelement location="${build.test}" />
    <fileset dir="${build.lib}">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <!-- donwload from maven -->
  <macrodef name="maven">
    <attribute name="group-id" />
    <attribute name="artifact-id" />
    <attribute name="version" />
    <attribute name="dest" default="${build.lib}" />
    <sequential>
      <mkdir dir="@{dest}" />
      <get src="http://search.maven.org/remotecontent?filepath=@{group-id}/@{artifact-id}/@{version}/@{artifact-id}-@{version}.jar" 
         dest="@{dest}/@{artifact-id}-@{version}.jar" skipexisting="true" verbose="off" />
      <get src="http://search.maven.org/remotecontent?filepath=@{group-id}/@{artifact-id}/@{version}/@{artifact-id}-@{version}-javadoc.jar" 
         dest="@{dest}/@{artifact-id}-@{version}-javadoc.jar" skipexisting="true" verbose="off" />
      <get src="http://search.maven.org/remotecontent?filepath=@{group-id}/@{artifact-id}/@{version}/@{artifact-id}-@{version}-sources.jar" 
         dest="@{dest}/@{artifact-id}-@{version}-sources.jar" skipexisting="true" verbose="off" />
    </sequential>
  </macrodef>
  
  <target name="all" description="Create all build artifacts." depends="compile, test, checkstyle, javadoc, dist" />

  <target name="clean" description="Delete all build artifacts.">
    <delete dir="${build}" />
  </target>

  <target name="compile" description="Compile source files.">
    <mkdir dir="${build.bin}" />
    <maven group-id="com/google/guava" artifact-id="guava" version="11.0.2" />
    <javac srcdir="${src}" destdir="${build.bin}" includeantruntime="false" classpathref="classpath" />
  </target>

  <target name="test" description="Run all JUnit tests." depends="compile">
    <mkdir dir="${build.test}" />
    <maven group-id="junit" artifact-id="junit" version="4.10" />
    <javac srcdir="${test}" destdir="${build.test}" includeantruntime="false" classpathref="classpath" />
    <junit haltonerror="no" haltonfailure="no">
      <classpath refid="classpath" />
      <batchtest todir="${build.test}">
        <formatter type="xml" />
        <formatter type="brief" usefile="false" />
        <fileset dir="${test}">
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="checkstyle" description="Generate a Checkstyle report.">
    <mkdir dir="${build.checkstyle}" />
    <get src="http://downloads.sourceforge.net/project/checkstyle/checkstyle/5.5/checkstyle-5.5-bin.zip"
      dest="${build.lib}" skipexisting="true" verbose="off" />
    <unzip src="${build.lib}/checkstyle-5.5-bin.zip" dest="${build.lib}" overwrite="no">
      <patternset>
        <include name="**/*-all.jar" />
      </patternset>
      <mapper type="flatten" />
    </unzip>
    <java classname="com.puppycrawl.tools.checkstyle.Main" output="${build.checkstyle}/checkstyle.xml">
      <classpath refid="classpath" />
      <arg value="-f" /><arg value="xml" />
      <arg value="-r" /><arg file="${src}" />
      <arg value="-c" /><arg file="checkstyle.xml" />
    </java>
  </target>

  <target name="javadoc" description="Generate the JavaDoc files.">
    <mkdir dir="${build.doc}" />
    <javadoc sourcepath="${src}" destdir="${build.doc}">
      <classpath refid="classpath" />
      <link href="http://java.sun.com/javase/6/docs/api/" />
      <header><![CDATA[<b>${app.name} ${app.version}</b>]]></header>
      <doctitle><![CDATA[<h1>${app.name} ${app.version}</h1>]]></doctitle>
    </javadoc>
  </target>

  <target name="dist" description="Generate the distribution." depends="test">
    <zip basedir="." destfile="${build}/${app.name}-${app.version}.zip" excludesfile=".gitignore" />
  </target>

</project>